;;; Automatically generated on Tue Mar 20 09:39:04 2018
;;; Invoked by dalong@mototo-3.local using 25.2.1
(setq-default session-file-alist '(("~/.emacs.d/lisp/init-rust.el" 1447 1342 1 nil nil 1447 (overwrite-mode)) ("~/p/HelloRust/src/hello_world.rs" 989 1 1 nil nil 1576 (overwrite-mode)) ("~/p/epic/src/main.rs" 889 783 1 nil nil 791 (overwrite-mode)) ("~/.emacs.d/init.el" 320 709 1 nil nil 1452 (overwrite-mode)) ("~/.emacs.d/lisp/init-elpa.el" 477 212 1 nil nil 521 (overwrite-mode)) ("~/p/TutorialRust/src/hello_world.rs" 527 490 1 nil nil 527 (overwrite-mode)) ("~/.emacs.d/lisp/init-ui.el" 761 812 1 nil nil 761 (overwrite-mode)) ("~/p/epic/Cargo.toml" 176 164 1 nil nil 176 (overwrite-mode)) ("~/.emacs.d/lisp/init-projectile.el" 79 80 1 nil nil 79 (overwrite-mode)) ("~/.emacs.d/lisp/init-org.el" 618 355 1 nil nil 355 (overwrite-mode)) ("~/.emacs.d/notes.org" 2 nil 1 nil nil 264 (overwrite-mode)) ("~/.emacs.d/notes" 80 87 1 nil nil 162 (overwrite-mode)) ("~/.gtd/gtd.org" 204 290 1 nil nil 482 (overwrite-mode)) ("~/.emacs.d/lisp/init-gtd.el" 532 531 1 nil nil 532 (overwrite-mode)) ("~/p/HelloGo/main.go" 174 92 1 nil nil 177 (overwrite-mode)) ("~/.emacs.d/lisp/init-go.el" 225 83 1 nil nil 225 (overwrite-mode)) ("~/.emacs.d/lisp/init-editing.el" 1197 1242 1 nil nil 1197 (overwrite-mode)) ("~/p/HelloVapor/Config/crypto.json" 254 191 1 nil nil 254 (overwrite-mode))))
(setq-default file-name-history '("~/p/HelloVapor/Config/crypto.json" "~/p/HelloVapor/Config/droplet.json" "~/.emacs.d/lisp/init-projectile.el" "~/p/HelloVapor/Sources/App/Controllers/PostController.swift" "~/.emacs.d/lisp/init-editing.el" "~/.emacs.d/lisp/init-go.el" "~/p/HelloGo/main.go" "~/.gitbucket/database.conf" "~/.gitconfig" "~/p/HelloVapor/Config/app.json" "~/.gtd/gtd.org" "~/.emacs.d/notes.org" "~/.emacs.d/lisp/init-org.el" "~/p/epic/Cargo.lock" "~/p/TutorialRust/src/lib.rs" "~/.emacs.d/lisp/init-ui.el" "~/p/TutorialRust/src/hello_world.rs" "~/p/epic/Cargo.toml" "~/.emacs.d/lisp/init-elpa.el" "~/p/epic/src/main.rs" "~/p/HelloRust/src/hello_world.rs" "~/.emacs.d/init.el" "~/.emacs.d/lisp/init-rust.el" "/Users/dalong/.emacs.d/lisp/init-rust.el" "/Users/dalong/.emacs.d/init.el" "/Users/dalong/p/epic/src/main.rs"))
(setq-default search-ring '("lis" "lisp"))
(setq-default command-history '((load-file "~/.emacs.d/lisp/init-rust.el") (find-file "/Users/dalong/.emacs.d/lisp/init-rust.el") (find-file "/Users/dalong/.emacs.d/init.el") (find-file "~/p/HelloRust/src/hello_world.rs" t) (find-file "/Users/dalong/p/epic/src/main.rs") (load-file "~/.emacs.d/init.el") (print-buffer) (cargo-process-run) (cargo-minor-mode (quote toggle)) (find-file "/Users/dalong/.emacs.d/lisp/init-elpa.el") (find-file "/Users/dalong/p/epic/Cargo.toml") (find-file "/Users/dalong/.emacs.d/lisp/init-ui.el") (linum-mode (quote toggle)) (find-file "/Users/dalong/p/TutorialRust/src/hello_world.rs") (helm-projectile nil) (find-file "~/p/TutorialRust/" t) (search-forward "seri") (company-mode (quote toggle)) (counsel-projectile nil) (find-file "/Users/dalong/.emacs.d/lisp/init-projectile.el") (projectile-find-file nil) (find-file "/Users/dalong/.emacs.d/lisp/init-org.el") (find-file "/Users/dalong/.emacs.d/notes.org") (checkdoc-interactive nil) (remember nil) (find-file "/Users/dalong/.emacs.d/lisp/init-gtd.el") (find-file "/Users/dalong/.emacs.d/notes") (column-number-mode (quote toggle)) (find-file "/Users/dalong/.gtd/gtd.org") (find-file "/Users/dalong/p/HelloGo/main.go") (find-file "/Users/dalong/.emacs.d/lisp/init-go.el") (go-mode) (find-file "~/p/HelloVapor/" t) (route) (ido-mode nil) (find-file "/Users/dalong/.emacs.d/lisp/init-editing.el") (end-of-buffer nil) (beginning-of-buffer nil) (find-file "/Users/dalong/p/HelloVapor/Sources/App/Controllers/PostController.swift") (find-file "/Users/dalong/p/HelloVapor/Config/crypto.json") (find-file "/Users/dalong/p/HelloVapor/Config/app.json")))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep --full-name -n --no-color -i -e '%s'"))
(setq-default extended-command-history '("load-file" "print-buffer" "org-babel-execute-src-block-maybe" "cargo-process-run" "cargo-minor-mode" "package-install" "racer-rust" "linum-mode" "helm-projectile" "search-forward" "company-mode" "counsel-projectile" "projectile-find-file" "checkdoc-interactive" "remember" "column-number-mode" "go-mode" "route" "ido-mode" "TAGS" "end-of-buffer" "beginning-of-buffer"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates closure (t) nil (let* \.\.\. \.\.\. \.\.\.)) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Eval" closure \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) ("Edit and eval" closure \.\.\. \.\.\. \.\.\.)) (persistent-action . helm-sexp-eval) (multiline) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: helm-sexp-eval (keeping session)") (multimatch) (group . helm)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: ignore (keeping session)") (multimatch) (group . helm)))
(setq-default helm-source-info-automake-history '((name . "Info Index: automake-history") (init . helm-info-init) (candidates . helm-candidates-in-buffer) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Goto node" . helm-info-goto)) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (display-to-real . helm-info-display-to-real) (volatile) (match identity) (redisplay . identity) (header-line . "C-j: Goto node (keeping session)") (multimatch) (group . helm) (get-line . buffer-substring) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn) (info-file . "automake-history")))
(setq-default ido-file-history '("init-rust.el" "init.el" nil "main.rs" "init-elpa.el" "Cargo.toml" "init-ui.el" "hello_world.rs" "init-projectile.el" "init-org.el" "notes.org" "init-gtd.el" "notes" "gtd.org" "main.go" "init-go.el" "init-editing.el" "PostController.swift" "crypto.json" "app.json"))
(setq-default ivy-history '("main.rs"))
(setq-default minibuffer-history '("serde" "*" #("rustc_serialize" 0 15 (fontified t)) "seri" "package" "src/main.rs" "README.md" "5x2" "Config/droplet.json"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-read-date-history '("9    " "   " "info    " "23232323    " "sdfsfsfs    "))
(setq-default smex-history '(load-file print-buffer cargo-process-run cargo-minor-mode package-install linum-mode helm-projectile))
